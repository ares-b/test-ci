name: Rust Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  rust-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Set up Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Extract version number
        id: extract_version
        run: |
          echo "BRANCH_REF=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
          VERSION=$(echo ${GITHUB_HEAD_REF} | sed 's/release-v\([0-9]*\.[0-9]*\.[0-9]*\)/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

      - name: Create tag and release
        env:
          VERSION: ${{ steps.extract_version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NOTES=$(sed -n '/## \['${{ steps.extract_version.outputs.version }}'\]/,/## \[/p' CHANGELOG.md | sed '$d' | sed '1d')
          git tag -a "v${{ steps.extract_version.outputs.version }}" -m "Release ${{ steps.extract_version.outputs.version }}"
          git push origin "v${{ steps.extract_version.outputs.version }}"
          gh release create "v${{ steps.extract_version.outputs.version }}" --title "v${{ steps.extract_version.outputs.version }}" --notes "${NOTES}"

  rust-build:
    runs-on: ubuntu-latest
    needs: rust-release
    if: |
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'release-v') &&
      contains(github.event.pull_request.head.ref, '.')
    strategy:
      matrix:
        target:
          - aarch64-unknown-none
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
        package:
          - metaflow
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }} --package ${{ matrix.package }}

      - name: Upload
        env:
          VERSION: ${{ needs.rust-release.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "target/${{ matrix.target }}/release/${{ matrix.package }}" "${{ matrix.package }}_{{ matrix.target }}_${{ needs.rust-release.outputs.version }}" --clobber
