on:
  pull_request:
    branches:
      - main
    types:
      - closed
    paths-ignore:
      - 'infrastructure/**'
      - '.github/workflows/infrastructure-cicd.yml'
      - 'DockerFile'

  push:
    branches:
      - release-next

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-pre-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Rust Release
      uses: ./.github/actions/rust_release
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        changelog_path: 'CHANGELOG.md'
        release_prefix: 'release-'
        targets: '["x86_64-unknown-linux-gnu"]'
        packages: '["test-ci"]'
        pre_release: 'true'
      if: github.event.pull_request.merged == true && !startsWith(github.event.pull_request.head.ref, 'release')

  rust-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Rust Release
      uses: ./.github/actions/rust_release
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        changelog_path: 'CHANGELOG.md'
        release_prefix: 'release-'
        targets: '["x86_64-unknown-linux-gnu"]'
        packages: '["test-ci"]'
        pre_release: 'false'
      if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release')

    - name: Push Updated Release Commit
      run: |
        git commit --amend -m "chore(release): release ${{ steps.cliff.outputs.version }}"
        git push --force-with-lease
      if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-pre-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release-next'

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate Changelog and Version
      id: cliff
      uses: orhun/git-cliff-action@v3
      with:
        config: Cargo.toml
        args: --bump --github-repo ${{ github.repository }}
      env:
        OUTPUT: CHANGELOG.md
        GITHUB_REPO: ${{ github.repository }}

    - name: Update Pre-Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=$(echo "${{ steps.cliff.outputs.version }}")
        NOTES=$(sed -n '/## \['${VERSION:1}'\]/,/## \[/p' CHANGELOG.md | sed '$d' | sed '1d')
        gh release delete "${VERSION}"
        gh release create "${VERSION}" --title "${VERSION}" --notes "${NOTES}" --prerelease
